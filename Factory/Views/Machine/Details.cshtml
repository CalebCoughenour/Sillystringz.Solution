@model Factory.Models.Machine
<div class="topnav">
  <a id="nav-name-link" href="/"><h1 class="nav-title">Sillystringz Inc.</h1></a>
  <a id="nav-link" href="/">Home</a>
  <a id="nav-link" href="/engineer">Engineers</a>
  <a id="nav-link" href="/machine" class="active">Machines</a>
  <a id="nav-link" href="/machine/create">Add Machine</a>
  <a id="nav-link" href="/engineer/create">Add Engineer</a>
</div>


<h3>@Html.DisplayFor(model => model.Name)'s Details:</h3>
 
<h5>@Html.Label("Ticket Details"): @Html.DisplayFor(model => model.Ticket)</h5>
<h5>@Html.Label("Date Of Ticket"): @Html.DisplayFor(model => model.Date)</h5>
@if(@Model.Completed == true)
{
  <h3>@Html.Label("Status"): Completed</h3>
}
else
{
  <h3>@Html.Label("Satus"): Not Completed</h3>
}

@if(@Model.JoinEntities.Count == 0)
{
  <p>@Html.DisplayFor(model => model.Name) Does Not Have Any Engineers's Assigned</p>
}
else
{
  <h5>@Html.DisplayFor(model => model.Name)'s Engineers</h5>
  <ul>
    @foreach (var join in Model.JoinEntities)
    {
      <li>@join.Engineer.Name</li>
      @using (Html.BeginForm("DeleteEngineer", "Machine"))
      {
        @Html.Hidden("joinId", @join.EngineerMachineId)
        <input type="submit" value="Delete" class="btn btn-danger">
      }
    }
  </ul>
}

<p>@Html.ActionLink("Add Engineer", "AddEngineer", new { id = Model.MachineId })</p>
<p>@Html.ActionLink("Edit Machine", "Edit", new { id = Model.MachineId })</p>
<p>@Html.ActionLink("Delete Machine", "Delete", new { id = Model.MachineId })</p>